
TODO / WISHLIST:

For the next (combined) release (Updated 2015-11-29):

PRIMARY GOALS FOR THIS RELEASE:

1) Update and combine the documentation. What started out as a simple solution to a configuration probem has morphed into a much more
	sophisticated management tool, and while it's more complex than it needs to be, the functionality is nice in my environment.
	With that said, nobody else would even know most of the goodies are there.
	
2) Combine the BTRMS and the TR-AMS scripts into a single package. At this point TR-AMS is becoming the most useful way to install
	and use the BTRMS backup methodology in a distributed environment. This will probably require a restructuring of the layout
	between the scripts, but may allow for the push of the working files directly from the host environment rather than
	requiring the wget from githib (meaning we may not HAVE to install software on every remote router to support an
	https wget.) The implications of this merge remain to be determined.
	
3) Add a "New To Network" routine to allow propagation of new routers that share most code and configurations, but not all 
	(such as something new to the VPN group or similar, copied from an existing router). 
	-- Need to determine which parameters need to be "made clean."
	
4) Modify the change routine to verify that we're not creating Dynamic DNS or OpenSSH VPN issues between different units.
	Options include (a) Simply stripping these parameters from the basic output, 
	(b) adding them to the list of modify parameters.
	(c) Abandon the whole "in-script variable" concept and manage parameters with files (Consider how often the parameters
		will change, how often preferences will differ among users, and how often the whole thing will be managed
		from *nix enironments vs. on the router environment and whether I'm just overthinking it and should leave
		well enough alone.)
	
SECONDARY GOALS (Items under consideration):

1) Take anoher look at the file usage, and reduce at any point possible the number of writes to the delicate filesystem.

2) Consider removing the debug code from the main script. At this point it's not really used, and makes the code more confusing.
	I think the best approach is to consider leaving the "modify" (and any similar future modes) capable of running in a *nix
	(non-router) environment, but do away with the main script debugging--at least in production code. It's too confusing and
	eats up too many useless code lines.

0) Add an interactive initialization, just to show the user where the directories point before starting the run 
-- give a chance to abort the backup in case the user doesn't like where things are pointed. -- Probably not necessary

0) Need to finish the in-code documentation for this script -- I know what it is doing today, but I might not remember much of 
	what I am thinking in a few months when I look at at again, or have to make updates to accommodate firmware change.

