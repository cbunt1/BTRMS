
TODO / WISHLIST:

For the next (combined) release (Updated 2015-11-29):

PRIMARY GOALS FOR THIS RELEASE:

1) Update and combine the documentation. What started out as a simple solution 
    to a configuration probem has morphed into a much more sophisticated 
    management tool, and while it's more complex than it needs to be, the
    functionality is nice in my environment. With that said, nobody else would 
    even know most of the goodies are there.

2) Combine the BTRMS and the TR-AMS scripts into a single package. At this 
    point TR-AMS is becoming the most useful way to install and use the BTRMS 
    backup methodology in a distributed environment. This will probably require
    a restructuring of the layout between the scripts, but may allow for the 
    push of the working files directly from the host environment rather than
    requiring the wget from githib (meaning we may not HAVE to install software
    on every remote router to support an https wget.) The implications of this 
    merge remain to be determined. -- DONE! -- This merge is complete in
    Develop branch (Will be at least version 1.3.x)

3) Add a "New To Network" routine to allow propagation of new routers that 
    share most code and configurations, but not all (such as something new to 
    the VPN group or similar, copied from an existing router). 
    -- Need to determine which parameters need to be "made clean."

4) Modify the change routine to verify that we're not creating Dynamic DNS or
    OpenSSH VPN issues between different units. Options include (a) Simply 
    stripping these parameters from the basic output, (b) adding them to the 
    list of modify parameters. (c) Abandon the whole "in-script variable" 
    concept and manage parameters with files (Consider how often the parameters
    will change, how often preferences will differ among users, and how often 
    the whole thing will be managed from *nix enironments vs. on the router 
    environment and whether I'm just overthinking it and should leave well 
    enough alone.) -- it seems like this can be addressed within the framework
    of the "New To Network" function pretty easily, since this is where the
    potential problem crops up anyway.

SECONDARY GOALS (Items under consideration):

1) Take anoher look at the file usage, and reduce at any point possible the 
    number of writes to the delicate filesystem. -- Reduced writes, eliminated
    one file from ParameterMod().
    
2) For the next group of changes: Do we really need to "prioritize" those
    network parameters, and do we need to do the two-staged rebuild? This
    seemed important when building the original script, but I'm not sure it 
    really adds any value. Before scrapping the logic, verify whether doing
    so has an effect on our ability to run the Modify function. -- It does not
    the modify() compares variables from a parameter list against lines in the
    file we're modding via sed. 

3) Consider removing the debug code from the main script. At this point it's 
    not really used, and makes the code more confusing. I think the best 
    approach is to consider leaving the "modify" (and any similar future modes)
    capable of running in a *nix (non-router) environment, but do away with the
    main script debugging--at least in production code. It's too confusing and
    eats up too many useless code lines. --DONE, Debug code is gone.

BUGS:

1) When running in a *nix environment, we're creating working directories 
    before trapping the fact we're running in *nix. -- 
        OPTION: Trap early, and use pwd as working directory. Back to 
        considering whether we should accept an output file or directory 
        specification as input on the command line. -- DONE.
    
2) When running in a *nix environment, we're writing modified scripts out to 
    the working directory that would be appropriate for the "real" environment
    i.e. bunt-77070-centos-01 on the Centos box. This is going to be a global
    behavior of course, but I need to trap/fix it in "offline" modes.
        OPTION: Proper fix for #1 will also fix #2 -- DONE
    
3) Running in *nix environment, the output filenames are system-appropriate 
    rather than following the structure of the original files. We can probably 
    fix the behavior along with some of the above glitches by either adding or
    transferring fixed "original-run-time" variables to the output script.
        OPTION: Pull the output filename from the input filename, pull the output
        filename from data in the file itself, or require/offer it as an option
        from the command line. Advantages of another input parameter are
        stacking up. -- DONE, not using a third parameter yet.
    
4) Definitely need to add a trap to output scripts to verify that we're running
    in a router before we start setting boatloads of what will become 
    environment variables. No telling what we could foul up on a running *nix 
    box. Probably nothing, since the 'nvram' command will likely bomb, but 
    let's just not take that chance. -- DONE.
    
5) Minor,but fix it now. ScriptVersion="1.2.1" variable should be consistent
    across all associated script files (transfersettings.sh, remote-exec.sh,
    and host-exec.sh)
    
6) After a flash with 1.3.3-beta, router-03 came back up with Tomato24 as its
    2g wireless name. Need to check to see if this is a configuration glitch or
    a parameter export glitch. That router's a test bed, so it could just be 
    a problem with the config that was onit in the first place, although it 
    was reporting to the Bunt_admin_wireless_2G network initially.
    
